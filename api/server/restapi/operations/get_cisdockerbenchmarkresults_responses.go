// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openclarity/kubeclarity/api/server/models"
)

// GetCisdockerbenchmarkresultsOKCode is the HTTP code returned for type GetCisdockerbenchmarkresultsOK
const GetCisdockerbenchmarkresultsOKCode int = 200

/*GetCisdockerbenchmarkresultsOK Success

swagger:response getCisdockerbenchmarkresultsOK
*/
type GetCisdockerbenchmarkresultsOK struct {

	/*
	  In: Body
	*/
	Payload *GetCisdockerbenchmarkresultsOKBody `json:"body,omitempty"`
}

// NewGetCisdockerbenchmarkresultsOK creates GetCisdockerbenchmarkresultsOK with default headers values
func NewGetCisdockerbenchmarkresultsOK() *GetCisdockerbenchmarkresultsOK {

	return &GetCisdockerbenchmarkresultsOK{}
}

// WithPayload adds the payload to the get cisdockerbenchmarkresults o k response
func (o *GetCisdockerbenchmarkresultsOK) WithPayload(payload *GetCisdockerbenchmarkresultsOKBody) *GetCisdockerbenchmarkresultsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cisdockerbenchmarkresults o k response
func (o *GetCisdockerbenchmarkresultsOK) SetPayload(payload *GetCisdockerbenchmarkresultsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCisdockerbenchmarkresultsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetCisdockerbenchmarkresultsDefault unknown error

swagger:response getCisdockerbenchmarkresultsDefault
*/
type GetCisdockerbenchmarkresultsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetCisdockerbenchmarkresultsDefault creates GetCisdockerbenchmarkresultsDefault with default headers values
func NewGetCisdockerbenchmarkresultsDefault(code int) *GetCisdockerbenchmarkresultsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetCisdockerbenchmarkresultsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get cisdockerbenchmarkresults default response
func (o *GetCisdockerbenchmarkresultsDefault) WithStatusCode(code int) *GetCisdockerbenchmarkresultsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get cisdockerbenchmarkresults default response
func (o *GetCisdockerbenchmarkresultsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get cisdockerbenchmarkresults default response
func (o *GetCisdockerbenchmarkresultsDefault) WithPayload(payload *models.APIResponse) *GetCisdockerbenchmarkresultsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cisdockerbenchmarkresults default response
func (o *GetCisdockerbenchmarkresultsDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCisdockerbenchmarkresultsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
