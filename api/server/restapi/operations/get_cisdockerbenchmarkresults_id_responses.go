// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openclarity/kubeclarity/api/server/models"
)

// GetCisdockerbenchmarkresultsIDOKCode is the HTTP code returned for type GetCisdockerbenchmarkresultsIDOK
const GetCisdockerbenchmarkresultsIDOKCode int = 200

/*GetCisdockerbenchmarkresultsIDOK Success

swagger:response getCisdockerbenchmarkresultsIdOK
*/
type GetCisdockerbenchmarkresultsIDOK struct {

	/*
	  In: Body
	*/
	Payload *GetCisdockerbenchmarkresultsIDOKBody `json:"body,omitempty"`
}

// NewGetCisdockerbenchmarkresultsIDOK creates GetCisdockerbenchmarkresultsIDOK with default headers values
func NewGetCisdockerbenchmarkresultsIDOK() *GetCisdockerbenchmarkresultsIDOK {

	return &GetCisdockerbenchmarkresultsIDOK{}
}

// WithPayload adds the payload to the get cisdockerbenchmarkresults Id o k response
func (o *GetCisdockerbenchmarkresultsIDOK) WithPayload(payload *GetCisdockerbenchmarkresultsIDOKBody) *GetCisdockerbenchmarkresultsIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cisdockerbenchmarkresults Id o k response
func (o *GetCisdockerbenchmarkresultsIDOK) SetPayload(payload *GetCisdockerbenchmarkresultsIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCisdockerbenchmarkresultsIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetCisdockerbenchmarkresultsIDDefault unknown error

swagger:response getCisdockerbenchmarkresultsIdDefault
*/
type GetCisdockerbenchmarkresultsIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetCisdockerbenchmarkresultsIDDefault creates GetCisdockerbenchmarkresultsIDDefault with default headers values
func NewGetCisdockerbenchmarkresultsIDDefault(code int) *GetCisdockerbenchmarkresultsIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetCisdockerbenchmarkresultsIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get cisdockerbenchmarkresults ID default response
func (o *GetCisdockerbenchmarkresultsIDDefault) WithStatusCode(code int) *GetCisdockerbenchmarkresultsIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get cisdockerbenchmarkresults ID default response
func (o *GetCisdockerbenchmarkresultsIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get cisdockerbenchmarkresults ID default response
func (o *GetCisdockerbenchmarkresultsIDDefault) WithPayload(payload *models.APIResponse) *GetCisdockerbenchmarkresultsIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cisdockerbenchmarkresults ID default response
func (o *GetCisdockerbenchmarkresultsIDDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCisdockerbenchmarkresultsIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
