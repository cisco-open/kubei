// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openclarity/kubeclarity/api/server/models"
)

// GetPackagesIDApplicationResourcesOKCode is the HTTP code returned for type GetPackagesIDApplicationResourcesOK
const GetPackagesIDApplicationResourcesOKCode int = 200

/*GetPackagesIDApplicationResourcesOK Success

swagger:response getPackagesIdApplicationResourcesOK
*/
type GetPackagesIDApplicationResourcesOK struct {

	/*
	  In: Body
	*/
	Payload *GetPackagesIDApplicationResourcesOKBody `json:"body,omitempty"`
}

// NewGetPackagesIDApplicationResourcesOK creates GetPackagesIDApplicationResourcesOK with default headers values
func NewGetPackagesIDApplicationResourcesOK() *GetPackagesIDApplicationResourcesOK {

	return &GetPackagesIDApplicationResourcesOK{}
}

// WithPayload adds the payload to the get packages Id application resources o k response
func (o *GetPackagesIDApplicationResourcesOK) WithPayload(payload *GetPackagesIDApplicationResourcesOKBody) *GetPackagesIDApplicationResourcesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get packages Id application resources o k response
func (o *GetPackagesIDApplicationResourcesOK) SetPayload(payload *GetPackagesIDApplicationResourcesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPackagesIDApplicationResourcesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPackagesIDApplicationResourcesNotFoundCode is the HTTP code returned for type GetPackagesIDApplicationResourcesNotFound
const GetPackagesIDApplicationResourcesNotFoundCode int = 404

/*GetPackagesIDApplicationResourcesNotFound Package ID not found.

swagger:response getPackagesIdApplicationResourcesNotFound
*/
type GetPackagesIDApplicationResourcesNotFound struct {
}

// NewGetPackagesIDApplicationResourcesNotFound creates GetPackagesIDApplicationResourcesNotFound with default headers values
func NewGetPackagesIDApplicationResourcesNotFound() *GetPackagesIDApplicationResourcesNotFound {

	return &GetPackagesIDApplicationResourcesNotFound{}
}

// WriteResponse to the client
func (o *GetPackagesIDApplicationResourcesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*GetPackagesIDApplicationResourcesDefault unknown error

swagger:response getPackagesIdApplicationResourcesDefault
*/
type GetPackagesIDApplicationResourcesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetPackagesIDApplicationResourcesDefault creates GetPackagesIDApplicationResourcesDefault with default headers values
func NewGetPackagesIDApplicationResourcesDefault(code int) *GetPackagesIDApplicationResourcesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetPackagesIDApplicationResourcesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get packages ID application resources default response
func (o *GetPackagesIDApplicationResourcesDefault) WithStatusCode(code int) *GetPackagesIDApplicationResourcesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get packages ID application resources default response
func (o *GetPackagesIDApplicationResourcesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get packages ID application resources default response
func (o *GetPackagesIDApplicationResourcesDefault) WithPayload(payload *models.APIResponse) *GetPackagesIDApplicationResourcesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get packages ID application resources default response
func (o *GetPackagesIDApplicationResourcesDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPackagesIDApplicationResourcesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
