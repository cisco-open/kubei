// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openclarity/kubeclarity/api/client/models"
)

// GetPackagesIDReader is a Reader for the GetPackagesID structure.
type GetPackagesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPackagesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPackagesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPackagesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetPackagesIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPackagesIDOK creates a GetPackagesIDOK with default headers values
func NewGetPackagesIDOK() *GetPackagesIDOK {
	return &GetPackagesIDOK{}
}

/* GetPackagesIDOK describes a response with status code 200, with default header values.

Success
*/
type GetPackagesIDOK struct {
	Payload *models.Package
}

func (o *GetPackagesIDOK) Error() string {
	return fmt.Sprintf("[GET /packages/{id}][%d] getPackagesIdOK  %+v", 200, o.Payload)
}
func (o *GetPackagesIDOK) GetPayload() *models.Package {
	return o.Payload
}

func (o *GetPackagesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Package)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPackagesIDNotFound creates a GetPackagesIDNotFound with default headers values
func NewGetPackagesIDNotFound() *GetPackagesIDNotFound {
	return &GetPackagesIDNotFound{}
}

/* GetPackagesIDNotFound describes a response with status code 404, with default header values.

Package ID not found.
*/
type GetPackagesIDNotFound struct {
}

func (o *GetPackagesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/{id}][%d] getPackagesIdNotFound ", 404)
}

func (o *GetPackagesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPackagesIDDefault creates a GetPackagesIDDefault with default headers values
func NewGetPackagesIDDefault(code int) *GetPackagesIDDefault {
	return &GetPackagesIDDefault{
		_statusCode: code,
	}
}

/* GetPackagesIDDefault describes a response with status code -1, with default header values.

unknown error
*/
type GetPackagesIDDefault struct {
	_statusCode int

	Payload *models.APIResponse
}

// Code gets the status code for the get packages ID default response
func (o *GetPackagesIDDefault) Code() int {
	return o._statusCode
}

func (o *GetPackagesIDDefault) Error() string {
	return fmt.Sprintf("[GET /packages/{id}][%d] GetPackagesID default  %+v", o._statusCode, o.Payload)
}
func (o *GetPackagesIDDefault) GetPayload() *models.APIResponse {
	return o.Payload
}

func (o *GetPackagesIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
