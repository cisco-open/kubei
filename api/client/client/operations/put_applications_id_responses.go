// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openclarity/kubeclarity/api/client/models"
)

// PutApplicationsIDReader is a Reader for the PutApplicationsID structure.
type PutApplicationsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutApplicationsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutApplicationsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPutApplicationsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPutApplicationsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutApplicationsIDOK creates a PutApplicationsIDOK with default headers values
func NewPutApplicationsIDOK() *PutApplicationsIDOK {
	return &PutApplicationsIDOK{}
}

/* PutApplicationsIDOK describes a response with status code 200, with default header values.

Update Application successful.
*/
type PutApplicationsIDOK struct {
	Payload *models.ApplicationInfo
}

func (o *PutApplicationsIDOK) Error() string {
	return fmt.Sprintf("[PUT /applications/{id}][%d] putApplicationsIdOK  %+v", 200, o.Payload)
}
func (o *PutApplicationsIDOK) GetPayload() *models.ApplicationInfo {
	return o.Payload
}

func (o *PutApplicationsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplicationInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutApplicationsIDNotFound creates a PutApplicationsIDNotFound with default headers values
func NewPutApplicationsIDNotFound() *PutApplicationsIDNotFound {
	return &PutApplicationsIDNotFound{}
}

/* PutApplicationsIDNotFound describes a response with status code 404, with default header values.

Application not found.
*/
type PutApplicationsIDNotFound struct {
}

func (o *PutApplicationsIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /applications/{id}][%d] putApplicationsIdNotFound ", 404)
}

func (o *PutApplicationsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutApplicationsIDDefault creates a PutApplicationsIDDefault with default headers values
func NewPutApplicationsIDDefault(code int) *PutApplicationsIDDefault {
	return &PutApplicationsIDDefault{
		_statusCode: code,
	}
}

/* PutApplicationsIDDefault describes a response with status code -1, with default header values.

unknown error
*/
type PutApplicationsIDDefault struct {
	_statusCode int

	Payload *models.APIResponse
}

// Code gets the status code for the put applications ID default response
func (o *PutApplicationsIDDefault) Code() int {
	return o._statusCode
}

func (o *PutApplicationsIDDefault) Error() string {
	return fmt.Sprintf("[PUT /applications/{id}][%d] PutApplicationsID default  %+v", o._statusCode, o.Payload)
}
func (o *PutApplicationsIDDefault) GetPayload() *models.APIResponse {
	return o.Payload
}

func (o *PutApplicationsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
