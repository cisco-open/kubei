name: Build & Push

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
        description: 'Image tag to build and push.'
      push:
        required: false
        type: string
        description: 'If set to true, push the image.'
        default: false

jobs:
  timestamp:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestamp.outputs.timestamp }}
    steps:
      - name: Get current timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

  apiclarity:
    needs: timestamp
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ghcr.io/cisco-open/kubeclarity:${{ inputs.image_tag }}
          file: Dockerfile.backend
          push: ${{ inputs.push }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ inputs.image_tag }}
            BUILD_TIMESTAMP=${{ needs.timestamp.outputs.timestamp }}
            COMMIT_HASH=${{ github.sha }}

  cis_docker_benchmark_scanner:
    needs: timestamp
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ghcr.io/cisco-open/kubeclarity-cis-docker-benchmark-scanner:${{ inputs.image_tag }}
          file: Dockerfile.cis_docker_benchmark_scanner
          push: ${{ inputs.push }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ inputs.image_tag }}
            BUILD_TIMESTAMP=${{ needs.timestamp.outputs.timestamp }}
            COMMIT_HASH=${{ github.sha }}

  runtime_k8s_scanner:
    needs: timestamp
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ghcr.io/cisco-open/kubeclarity-runtime-k8s-scanner:${{ inputs.image_tag }}
          file: Dockerfile.runtime_k8s_scanner
          push: ${{ inputs.push }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ inputs.image_tag }}
            BUILD_TIMESTAMP=${{ needs.timestamp.outputs.timestamp }}
            COMMIT_HASH=${{ github.sha }}

  sbom_db:
    needs: timestamp
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ghcr.io/cisco-open/kubeclarity-sbom-db:${{ inputs.image_tag }}
          file: Dockerfile.sbom_db
          push: ${{ inputs.push }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ inputs.image_tag }}
            BUILD_TIMESTAMP=${{ needs.timestamp.outputs.timestamp }}
            COMMIT_HASH=${{ github.sha }}

  cli:
    needs: timestamp
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ghcr.io/cisco-open/kubeclarity-cli:${{ inputs.image_tag }}
          file: Dockerfile.cli
          push: ${{ inputs.push }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ inputs.image_tag }}
            BUILD_TIMESTAMP=${{ needs.timestamp.outputs.timestamp }}
            COMMIT_HASH=${{ github.sha }}