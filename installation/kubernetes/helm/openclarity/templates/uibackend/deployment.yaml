apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openclarity.uibackend.name" . }}
  labels: {{- include "openclarity.uibackend.labels.standard" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "openclarity.uibackend.labels.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.uibackend.replicaCount }}
  template:
    metadata:
      labels: {{- include "openclarity.uibackend.labels.standard" . | nindent 8 }}
    spec:
      {{- if .Values.uibackend.affinity }}
      affinity: {{- .Values.uibackend.affinity | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.uibackend.nodeSelector }}
      nodeSelector: {{- .Values.uibackend.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.uibackend.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.uibackend.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.uibackend.tolerations }}
      tolerations: {{- .Values.uibackend.tolerations | nindent 8 }}
      {{- end }}
      containers:
        - name: uibackend
          image: {{ include "openclarity.images.image" ( dict "imageRoot" .Values.uibackend.image "global" .Values.global ) }}
          imagePullPolicy: {{ .Values.uibackend.image.pullPolicy | quote }}
          {{- if .Values.uibackend.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.uibackend.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.uibackend.resources }}
          resources: {{- toYaml .Values.uibackend.resources | nindent 12 }}
          {{- end }}
          args:
            - run
            - --log-level
            - {{ .Values.uibackend.logLevel }}
          ports:
            - name: health
              containerPort: 8083
          startupProbe:
            tcpSocket:
              port: health
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: health
            periodSeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: health
            periodSeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          env:
            # OpenClarity API server address
            - name: OPENCLARITY_UIBACKEND_APISERVER_ADDRESS
              value: {{ printf "http://%s:%s" (include "openclarity.apiserver.name" .) "8888" }}
      serviceAccountName: {{ include "openclarity.uibackend.serviceAccountName" . }}
