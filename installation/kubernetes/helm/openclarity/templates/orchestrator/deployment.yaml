apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openclarity.orchestrator.name" . }}
  labels: {{- include "openclarity.orchestrator.labels.standard" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "openclarity.orchestrator.labels.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.orchestrator.replicaCount }}
  template:
    metadata:
      labels: {{- include "openclarity.orchestrator.labels.standard" . | nindent 8 }}
    spec:
      {{- if .Values.orchestrator.affinity }}
      affinity: {{- .Values.orchestrator.affinity | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.orchestrator.nodeSelector }}
      nodeSelector: {{- .Values.orchestrator.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.orchestrator.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.orchestrator.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.orchestrator.tolerations }}
      tolerations: {{- .Values.orchestrator.tolerations | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "openclarity.orchestrator.serviceAccountName" . }}
      containers:
        - name: orchestrator
          image: {{ include "openclarity.images.image" ( dict "imageRoot" .Values.orchestrator.image "global" .Values.global ) }}
          imagePullPolicy: {{ .Values.orchestrator.image.pullPolicy | quote }}
          {{- if .Values.orchestrator.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.orchestrator.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.orchestrator.resources }}
          resources: {{- toYaml .Values.orchestrator.resources | nindent 12 }}
          {{- end }}
          args:
            - run
            - --log-level
            - {{ .Values.orchestrator.logLevel }}
          ports:
            - name: health
              containerPort: 8082
          startupProbe:
            tcpSocket:
              port: health
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: health
            periodSeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: health
            periodSeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          env:
            - name: OPENCLARITY_ORCHESTRATOR_APISERVER_ADDRESS
              value: {{ printf "http://%s:%s" (include "openclarity.apiserver.name" .) "8888" }}
            - name: OPENCLARITY_ORCHESTRATOR_ASSETSCAN_WATCHER_DELETE_POLICY
              value: {{ .Values.orchestrator.deleteJobPolicy }}
            - name: OPENCLARITY_ORCHESTRATOR_ASSETSCAN_WATCHER_SCANNER_CONTAINER_IMAGE
              value: {{ include "openclarity.images.image" ( dict "imageRoot" .Values.orchestrator.scannerImage "global" .Values.global ) }}
            - name: OPENCLARITY_ORCHESTRATOR_ASSETSCAN_WATCHER_SCANNER_APISERVER_ADDRESS
              value: {{ .Values.orchestrator.scannerApiServerAddress | default (printf "http://%s:%s" (include "openclarity.apiserver.name" .) "8888") }}
            - name: OPENCLARITY_ORCHESTRATOR_ASSETSCAN_WATCHER_SCANNER_EXPLOITSDB_ADDRESS
              value: {{ .Values.orchestrator.exploitsDBAddress | default (printf "http://%s:%s" (include "openclarity.exploitDBServer.name" .) "1326") }}
            - name: OPENCLARITY_ORCHESTRATOR_ASSETSCAN_WATCHER_SCANNER_TRIVY_SERVER_ADDRESS
              value: {{ .Values.orchestrator.trivyServerAddress | default (printf "http://%s:%s" (include "openclarity.trivyServer.name" .) "9992") }}
            - name: OPENCLARITY_ORCHESTRATOR_ASSETSCAN_WATCHER_SCANNER_GRYPE_SERVER_ADDRESS
              value: {{ .Values.orchestrator.grypeServerAddress | default (printf "%s:%s" (include "openclarity.grypeServer.name" .) "9991") }}
            - name: OPENCLARITY_ORCHESTRATOR_ASSETSCAN_WATCHER_SCANNER_FRESHCLAM_MIRROR
              value: {{ .Values.orchestrator.freshclamMirrorAddress | default (printf "http://%s:%s" (include "openclarity.freshclamMirror.name" .) "1000") }}
            - name: OPENCLARITY_ORCHESTRATOR_ASSETSCAN_WATCHER_YARA_RULE_SERVER_ADDRESS
              value: {{ .Values.orchestrator.yaraRuleServerAddress | default (printf "http://%s:%s" (include "openclarity.yaraRuleServer.name" .) "9993") }}
            - name: OPENCLARITY_ORCHESTRATOR_PROVIDER
              value: {{ .Values.orchestrator.provider }}

            {{- if eq .Values.orchestrator.provider "aws" -}}
            {{- with .Values.orchestrator.aws }}
            - name: AWS_REGION
              value: {{ .region }}
            - name: OPENCLARITY_AWS_SCANNER_REGION
              value: {{ .scannerRegion }}
            - name: OPENCLARITY_AWS_SUBNET_ID
              value: {{ .subnetId }}
            - name: OPENCLARITY_AWS_SECURITY_GROUP_ID
              value: {{ .securityGroupId }}
            - name: OPENCLARITY_AWS_KEYPAIR_NAME
              value: {{ .keypairName }}
            - name: OPENCLARITY_AWS_SCANNER_AMI_ID
              value: {{ .scannerAmiId }}
            - name: OPENCLARITY_AWS_SCANNER_INSTANCE_TYPE
              value: {{ .scannerInstanceType }}
            {{- end -}}
            {{- end }}

            {{- if eq .Values.orchestrator.provider "gcp" -}}
            {{- with .Values.orchestrator.gcp }}
            - name: OPENCLARITY_GCP_PROJECT_ID
              value: {{ .projectId }}
            - name: OPENCLARITY_GCP_SCANNER_ZONE
              value: {{ .scannerZone }}
            - name: OPENCLARITY_GCP_SCANNER_SUBNETWORK
              value: {{ .scannerSubnet }}
            - name: OPENCLARITY_GCP_SCANNER_MACHINE_TYPE
              value: {{ .scannerMachineType }}
            - name: OPENCLARITY_GCP_SCANNER_SOURCE_IMAGE
              value: {{ .scannerSourceImage }}
            {{- end -}}
            {{- end }}

            {{- if eq .Values.orchestrator.provider "azure" -}}
            {{- with .Values.orchestrator.azure }}
            - name: OPENCLARITY_AZURE_SUBSCRIPTION_ID
              value: .subscriptionId
            - name: OPENCLARITY_AZURE_SCANNER_LOCATION
              value: .scannerLocation
            - name: OPENCLARITY_AZURE_SCANNER_RESOURCE_GROUP
              value: .scannerResourceGroup
            - name: OPENCLARITY_AZURE_SCANNER_SUBNET_ID
              value: .scannerSubnetId
            - name: OPENCLARITY_AZURE_SCANNER_PUBLIC_KEY
              value: .scannerPublicKey
            - name: OPENCLARITY_AZURE_SCANNER_VM_SIZE
              value: .scannerVmSize
            - name: OPENCLARITY_AZURE_SCANNER_IMAGE_PUBLISHER
              value: .scannerImagePublisher
            - name: OPENCLARITY_AZURE_SCANNER_IMAGE_OFFER
              value: .scannerImageOffer
            - name: OPENCLARITY_AZURE_SCANNER_IMAGE_SKU
              value: .scannerImageSku
            - name: OPENCLARITY_AZURE_SCANNER_IMAGE_VERSION
              value: .scannerImageVersion
            - name: OPENCLARITY_AZURE_SCANNER_SECURITY_GROUP
              value: .scannerSecurityGroup
            - name: OPENCLARITY_AZURE_SCANNER_STORAGE_ACCOUNT_NAME
              value: .scannerStorageAccountName
            - name: OPENCLARITY_AZURE_SCANNER_STORAGE_CONTAINER_NAME
              value: .scannerStorageContainerName
            {{- end -}}
            {{- end }}

            {{- if eq .Values.orchestrator.provider "kubernetes" }}
            - name: OPENCLARITY_KUBERNETES_CONTAINER_RUNTIME_DISCOVERY_NAMESPACE
              value: {{ .Release.Namespace | quote }}
            - name: OPENCLARITY_KUBERNETES_SCANNER_NAMESPACE
              value: {{ .Release.Namespace | quote }}
            {{- with .Values.orchestrator.kubernetes }}
            {{- end -}}
            {{- end }}

            {{- if eq .Values.orchestrator.provider "docker" }}
            {{- with .Values.orchestrator.docker }}
            {{- end -}}
            {{- end }}
