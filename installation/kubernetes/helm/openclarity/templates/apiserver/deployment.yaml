apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openclarity.apiserver.name" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "openclarity.apiserver.labels.standard" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "openclarity.apiserver.labels.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.apiserver.replicaCount }}
  template:
    metadata:
      labels: {{- include "openclarity.apiserver.labels.standard" . | nindent 8 }}
    spec:
      {{- if .Values.apiserver.affinity }}
      affinity: {{- .Values.apiserver.affinity | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.apiserver.nodeSelector }}
      nodeSelector: {{- .Values.apiserver.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.apiserver.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.apiserver.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.apiserver.tolerations }}
      tolerations: {{- .Values.apiserver.tolerations | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "openclarity.apiserver.serviceAccountName" . }}
      {{- if .Values.apiserver.database.sqlite.enabled }}
      volumes:
        - name: {{ include "openclarity.apiserver.name" . }}-pv
          persistentVolumeClaim:
            claimName: {{ include "openclarity.apiserver.name" . }}-pvc
      {{- end }}
      containers:
        - name: apiserver
          image: {{ include "openclarity.images.image" ( dict "imageRoot" .Values.apiserver.image "global" .Values.global ) }}
          imagePullPolicy: {{ .Values.apiserver.image.pullPolicy | quote }}
          args:
            - run
            - --log-level
            - {{ .Values.apiserver.logLevel }}
          {{- if .Values.apiserver.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.apiserver.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
          {{- if .Values.apiserver.database.postgresql.enabled }}
            - name: OPENCLARITY_APISERVER_DATABASE_DRIVER
              value: POSTGRES
            - name: OPENCLARITY_APISERVER_DB_HOST
              value: {{ include "postgresql.v1.primary.fullname" .Subcharts.postgresql }}
            - name: OPENCLARITY_APISERVER_DB_PORT
              value: "5432"
            - name: OPENCLARITY_APISERVER_DB_NAME
              value: openclarity
            - name: OPENCLARITY_APISERVER_DB_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: OPENCLARITY_APISERVER_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.v1.secretName" .Subcharts.postgresql }}
                  key: password
          {{- else if .Values.apiserver.database.externalPostgresql.enabled }}
            - name: OPENCLARITY_APISERVER_DATABASE_DRIVER
              value: POSTGRES
            - name: OPENCLARITY_APISERVER_DB_HOST
              value: {{ .Values.apiserver.database.externalPostgresql.host }}
            - name: OPENCLARITY_APISERVER_DB_PORT
              value: {{ .Values.apiserver.database.externalPostgresql.port | quote }}
            - name: OPENCLARITY_APISERVER_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.apiserver.database.externalPostgresql.auth.existingSecret }} }}
                  key: database
            - name: OPENCLARITY_APISERVER_DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.apiserver.database.externalPostgresql.auth.existingSecret }} }}
                  key: username
            - name: OPENCLARITY_APISERVER_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.apiserver.database.externalPostgresql.auth.existingSecret }} }}
                  key: password
          {{- else if .Values.apiserver.database.sqlite.enabled }}
            - name: OPENCLARITY_APISERVER_DATABASE_DRIVER
              value: LOCAL
            - name: OPENCLARITY_APISERVER_LOCAL_DB_PATH
              value: /data/openclarity.db
          {{- end }}
          {{- if .Values.apiserver.database.sqlite.enabled }}
          volumeMounts:
            - name: {{ include "openclarity.apiserver.name" . }}-pv
              mountPath: /data
          {{- end }}
          ports:
            - name: http
              containerPort: 8888
            - name: health
              containerPort: 8081
          startupProbe:
            tcpSocket:
              port: health
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: health
            periodSeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: health
            periodSeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          {{- if .Values.apiserver.resources }}
          resources: {{- toYaml .Values.apiserver.resources | nindent 12 }}
          {{- end }}
